openapi: 3.0.0
info:
  title: "RP Flask REST API"
  description: "An API about people and notes"
  version: "1.0.0"

servers:
  - url: "/api"

components:
  schemas:
    Person:
      type: "object"
      required:
        - lname
      properties:
        fname:
          type: "string"
        lname:
          type: "string"
    Tag:
      type: "object"
      required:
        - label
      properties:
        label:
          type: "string"


  parameters:
    lname:
      name: "lname"
      description: "Last name of the person to get"
      in: path
      required: True
      schema:
        type: "string"

paths:
  /tags:
    get:
      operationId: "tags.operations.read_all"
      tags:
        - "Tags"
      summary: "Read the list of all tags"
      responses:
        "200":
          description: "Successfully read tags list"

    post:
      operationId: "tags.operations.create"
      tags:
        - Tags
      summary: "Create a Tag"
      requestBody:
          description: "Tag to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "tag"
                $ref: "#/components/schemas/Tag"
      responses:
        "201":
          description: "Successfully created a tag"

  # /people:
  #   get:
  #     operationId: "people.read_all"
  #     tags:
  #       - "People"
  #     summary: "Read the list of people"
  #     responses:
  #       "200":
  #         description: "Successfully read people list"
  #   post:
  #     operationId: "people.create"
  #     tags:
  #       - People
  #     summary: "Create a person"
  #     requestBody:
  #         description: "Person to create"
  #         required: True
  #         content:
  #           application/json:
  #             schema:
  #               x-body-name: "person"
  #               $ref: "#/components/schemas/Person"
  #     responses:
  #       "201":
  #         description: "Successfully created person"
  # /people/{lname}:
  #   get:
  #     operationId: "people.read_one"
  #     tags:
  #       - People
  #     summary: "Read one person"
  #     parameters:
  #       - $ref: "#/components/parameters/lname"
  #     responses:
  #       "200":
  #         description: "Successfully read person"
  #   put:
  #     tags:
  #       - People
  #     operationId: "people.update"
  #     summary: "Update a person"
  #     parameters:
  #       - $ref: "#/components/parameters/lname"
  #     responses:
  #       "200":
  #         description: "Successfully updated person"
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             x-body-name: "person"
  #             $ref: "#/components/schemas/Person"
  #   delete:
  #     tags:
  #       - People
  #     operationId: "people.delete"
  #     summary: "Delete a person"
  #     parameters:
  #       - $ref: "#/components/parameters/lname"
  #     responses:
  #       "204":
  #         description: "Successfully deleted person"
